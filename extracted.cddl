
start = bpsec-cose-asb / AAD-structure /
  primary-block / extension-block /
  MAC_structure / Sig_structure / Enc_structure / COSE_KeySet
        

; Specialize the ASB for this context
bpsec-cose-asb = bpsec-context-use<
  0, ; Context ID TBD-COSE
  $bpsec-cose-param,
  $bpsec-cose-result
>
$ext-data-asb /= bpsec-cose-asb
        

$bpsec-cose-param /= [1, COSE_Key]
$bpsec-cose-param /= [2, COSE_KeySet]
            

$bpsec-cose-param /= [3, additional-protected]
additional-protected = empty_or_serialized_map

$bpsec-cose-param /= [4, additional-unprotected]
additional-unprotected = header_map
            

$bpsec-cose-param /= [5, AAD-scope]
AAD-scope = uint .bits AAD-scope-flags
AAD-scope-flags = &(
    has-primary-ctx: 0,
    has-target-ctx: 1,
    has-security-ctx: 2,
)
            

$bpsec-cose-result /= [16, bstr .cbor COSE_Encrypt0]
$bpsec-cose-result /= [17, bstr .cbor COSE_Mac0]
$bpsec-cose-result /= [18, bstr .cbor COSE_Sign1]
$bpsec-cose-result /= [96, bstr .cbor COSE_Encrypt]
$bpsec-cose-result /= [97, bstr .cbor COSE_Mac]
$bpsec-cose-result /= [98, bstr .cbor COSE_Sign]
          

AAD-structure = [
    ; non-null if has-primary-ctx is set
    primary-ctx:  null / primary-block,
    ; non-null if has-target-ctx is set
    target-ctx:   null / block-metadata,
    ; non-null if has-security-ctx is set
    security-ctx: null / block-metadata,
    ; copy of additional-protected (or default)
    additional-protected
]
; The first three fields of BP "canonical-block-structure"
block-metadata = [
    block-type-code: uint,
    block-number: uint,
    block-control-flags,
]
            